{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/luthf/Documents/INSTITUT%20TEKNOLOGI%20BANDUNG/SEMESTER%204/labubu%21/gukesh/src/frontend/magnus-v-gukesh/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\n// --- TypeScript Type Definitions ---\ninterface GameState {\n    board_fen: string;\n    turn: 'white' | 'black';\n    legal_moves: Record<string, [number, number][]>;\n    is_check: boolean;\n    is_checkmate: boolean;\n    is_stalemate: boolean;\n    winner: 'white' | 'black' | 'draw' | null;\n    history_count: number;\n    current_move_index: number;\n    ai_move?: AnalysisInfo;\n}\n\ninterface AnalysisInfo {\n    from: string;\n    to: string;\n    evaluation: number;\n    mate_in: number | null;\n    analysis: Record<string, any>;\n}\n\ntype BoardArray = (string | null)[][];\ntype SelectedSquare = { row: number; col: number } | null;\ntype LastMove = { from: string; to: string } | null;\n\n// --- Helper Functions ---\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nconst fenToBoardArray = (fen: string): BoardArray => {\n    const board: BoardArray = Array(8).fill(null).map(() => Array(8).fill(null));\n    const pieceMap: Record<string, string> = {\n        'k': '♚', \n        'p': '♟︎', \n        'q': '♛', \n        'K': '♔', \n        'P': '♙', \n        'Q': '♕'  \n    };    \n    const fenBoard = fen.split(' ')[0];\n    let row = 0;\n    let col = 0;\n\n    for (const char of fenBoard) {\n        if (char === '/') {\n            row++;\n            col = 0;\n        } else if (isNaN(parseInt(char))) {\n            board[row][col] = pieceMap[char] || '';\n            col++;\n        } else {\n            col += parseInt(char);\n        }\n    }\n    return board;\n};\n\nconst coordsToNotation = (row: number, col: number): string => {\n    const file = String.fromCharCode('a'.charCodeAt(0) + col);\n    const rank = 8 - row;\n    return `${file}${rank}`;\n};\n\n// --- Main Component ---\nexport default function Home() {\n    const [game, setGame] = useState<GameState | null>(null);\n    const [board, setBoard] = useState<BoardArray>([]);\n    const [selectedSquare, setSelectedSquare] = useState<SelectedSquare>(null);\n    const [lastMove, setLastMove] = useState<LastMove>(null);\n    const [selectedAlgorithm, setSelectedAlgorithm] = useState('minimax');\n    const [aiDepth, setAiDepth] = useState(5);\n    const [analysisInfo, setAnalysisInfo] = useState<AnalysisInfo | null>(null);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // --- Effects ---\n    useEffect(() => {\n        setBoard(Array(8).fill(null).map(() => Array(8).fill(null)));\n    }, []);\n\n    useEffect(() => {\n        if (game) {\n            setBoard(fenToBoardArray(game.board_fen));\n            if (game.ai_move) {\n                setLastMove({ from: game.ai_move.from, to: game.ai_move.to });\n            }\n            if (game.turn === 'white' && !game.winner) {\n                handleAiMove();\n            }\n        }\n    }, [game]);\n\n    // --- API Handlers ---\n    const handleApiCall = async (apiCall: () => Promise<any>) => {\n        setIsLoading(true);\n        setError('');\n        try {\n            const response = await apiCall();\n            if (response.data.error) {\n                setError(response.data.error);\n            } else {\n                setGame(response.data);\n                if (response.data.ai_move) {\n                    setAnalysisInfo(response.data.ai_move);\n                }\n            }\n        } catch (err) {\n            setError('Failed to connect to the backend. Is the Python server running?');\n            console.error(err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSetup = (type: 'random' | 'file', payload?: File) => {\n        let apiCall;\n        const params = { algorithm: selectedAlgorithm, ai_depth: aiDepth };\n        setAnalysisInfo(null);\n        setSelectedSquare(null);\n        setLastMove(null);\n\n        if (type === 'random') {\n            apiCall = () => axios.get(`${API_BASE_URL}/api/setup_random`, { params });\n        } else {\n            if (!payload) return;\n            const formData = new FormData();\n            formData.append('file', payload);\n            apiCall = () => axios.post(`${API_BASE_URL}/api/setup_from_file`, formData, { params });\n        }\n        handleApiCall(apiCall);\n    };\n\n    const handleAiMove = () => {\n        handleApiCall(() => axios.get(`${API_BASE_URL}/api/ai_move`));\n    };\n\n    const handlePlayback = (command: string) => {\n        setSelectedSquare(null);\n        setLastMove(null);\n        handleApiCall(() => axios.post(`${API_BASE_URL}/api/playback`, { command }));\n    };\n    \n    const handleReset = () => {\n        setGame(null);\n        setBoard(Array(8).fill(null).map(() => Array(8).fill(null)));\n        setAnalysisInfo(null);\n        setError('');\n        setSelectedSquare(null);\n        setLastMove(null);\n    };\n\n    // --- UI Interaction ---\n    const onCellClick = (row: number, col: number) => {\n        if (isLoading || !game || game.turn !== 'black' || game.winner) return;\n\n        const pieceKey = `${row},${col}`;\n        const legalMovesForPiece = game.legal_moves[pieceKey];\n\n        if (selectedSquare) {\n            const legalMovesForSelected = game.legal_moves[`${selectedSquare.row},${selectedSquare.col}`] || [];\n            const isTargetLegal = legalMovesForSelected.some(move => move[0] === row && move[1] === col);\n\n            if (isTargetLegal) {\n                const fromNotation = coordsToNotation(selectedSquare.row, selectedSquare.col);\n                const toNotation = coordsToNotation(row, col);\n                setLastMove({ from: fromNotation, to: toNotation });\n\n                const apiCall = () => axios.post(`${API_BASE_URL}/api/player_move`, {\n                    start_row: selectedSquare.row,\n                    start_col: selectedSquare.col,\n                    end_row: row,\n                    end_col: col\n                });\n                setSelectedSquare(null);\n                handleApiCall(apiCall);\n            } else {\n                setSelectedSquare(null);\n            }\n        } else if (legalMovesForPiece) {\n            setSelectedSquare({ row, col });\n        }\n    };\n\n    // --- Render ---\n    return (\n        <div className={`min-h-screen bg-gray-900 text-white flex flex-col items-center justify-center p-4 font-sans ${isLoading ? 'cursor-wait' : ''}`}>\n            <div className=\"w-full max-w-6xl mx-auto flex flex-col lg:flex-row gap-8\">\n                {/* Left Side: Board and Playback */}\n                <div className=\"flex-grow lg:w-2/3\">\n                    <h1 className=\"text-4xl font-bold text-center mb-2\">AI Magnus vs Gukesh</h1>\n                    <p id=\"status-text\" className=\"text-center text-gray-400 mb-4\">\n                        {game ? (game.winner ? (game.winner === 'draw' ? 'Game Over: Draw!' : `Game Over: ${game.winner.charAt(0).toUpperCase() + game.winner.slice(1)} wins!`) : `It is ${game.turn}'s turn.`) : 'Start a game to begin.'}\n                    </p>\n                    \n                    <div className=\"relative w-full max-w-[600px] mx-auto aspect-square grid grid-cols-8 border-2 border-gray-700 rounded-lg overflow-hidden shadow-lg\">\n                        {board.map((rowArr, rowIndex) =>\n                            rowArr.map((piece, colIndex) => {\n                                const isLight = (rowIndex + colIndex) % 2 !== 0;\n                                const isSelected = selectedSquare?.row === rowIndex && selectedSquare?.col === colIndex;\n                                const legalMovesForSelected = selectedSquare ? game?.legal_moves[`${selectedSquare.row},${selectedSquare.col}`] || [] : [];\n                                const isMovable = legalMovesForSelected.some(move => move[0] === rowIndex && move[1] === colIndex);\n                                \n                                const currentSquareNotation = coordsToNotation(rowIndex, colIndex);\n                                const isLastMoveFrom = lastMove?.from === currentSquareNotation;\n                                const isLastMoveTo = lastMove?.to === currentSquareNotation;\n\n                                return (\n                                    <div\n                                        key={`${rowIndex}-${colIndex}`}\n                                        onClick={() => onCellClick(rowIndex, colIndex)}\n                                        className={`w-full h-full flex items-center justify-center text-4xl font-bold transition-colors duration-200\n                                            ${isLoading ? 'cursor-wait' : 'cursor-pointer'}\n                                            ${isLight ? 'bg-gray-400' : 'bg-gray-700'}\n                                            ${isSelected ? 'ring-4 ring-yellow-400 z-10' : ''}\n                                            ${isMovable ? 'bg-green-500/50' : ''}\n                                            ${isLastMoveFrom ? 'bg-yellow-600/50' : ''}\n                                            ${isLastMoveTo ? 'bg-yellow-500/70' : ''}\n                                        `}\n                                    >\n                                        <span style={{ color: piece?.startsWith('w') ? '#FFFFFF' : '#000000' }}>\n                                            {piece || <>&nbsp;</>}\n                                        </span>\n                                    </div>\n                                );\n                            })\n                        )}\n                    </div>\n\n                    <div className=\"mt-4 p-4 bg-gray-800 rounded-lg shadow-lg flex justify-center items-center gap-2 flex-wrap\">\n                        <h3 className=\"font-bold mr-4\">Playback:</h3>\n                        <button onClick={() => handlePlayback('first')} disabled={isLoading || !game || game.current_move_index === 0} className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\">First</button>\n                        <button onClick={() => handlePlayback('undo')} disabled={isLoading || !game || game.current_move_index === 0} className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\">Previous</button>\n                        <span className=\"w-24 text-center\">{game ? `Move ${game.current_move_index} / ${game.history_count - 1}` : 'N/A'}</span>\n                        <button onClick={() => handlePlayback('redo')} disabled={isLoading || !game || game.current_move_index >= game.history_count - 1} className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\">Next</button>\n                        <button onClick={() => handlePlayback('last')} disabled={isLoading || !game || game.current_move_index >= game.history_count - 1} className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\">Last</button>\n                    </div>\n                </div>\n\n                {/* Right Side: Controls and Analysis */}\n                <div className=\"lg:w-1/3 flex flex-col gap-6\">\n                    <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\n                        <h2 className=\"text-2xl font-bold border-b border-gray-700 pb-2 mb-4\">Game Controls</h2>\n                        <fieldset disabled={isLoading} className=\"space-y-3\">\n                            <div>\n                                <label htmlFor=\"algorithm\" className=\"block text-sm font-medium text-gray-300 mb-1\">Select Algorithm</label>\n                                <select \n                                    id=\"algorithm\" \n                                    value={selectedAlgorithm} \n                                    onChange={(e) => setSelectedAlgorithm(e.target.value)} \n                                    className=\"w-full p-2 bg-gray-700 rounded border border-gray-600 focus:ring-2 focus:ring-blue-500 disabled:opacity-50\"\n                                >\n                                    <option value=\"minimax\">Minimax</option>\n                                    <option value=\"greedy\">Greedy</option>\n                                </select>\n                            </div>\n                             {selectedAlgorithm === 'minimax' && (\n                                <div>\n                                    <label htmlFor=\"depth\" className=\"block text-sm font-medium text-gray-300 mb-1\">AI Depth ({aiDepth})</label>\n                                    <input \n                                        type=\"range\" \n                                        id=\"depth\" \n                                        min=\"2\" \n                                        max=\"8\" \n                                        step=\"1\" \n                                        value={aiDepth} \n                                        onChange={(e) => setAiDepth(parseInt(e.target.value))} \n                                        className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer disabled:opacity-50\"\n                                    />\n                                </div>\n                            )}\n                            <div className=\"flex gap-2\">\n                                <button onClick={() => fileInputRef.current?.click()} className=\"flex-1 px-4 py-2 bg-blue-600 rounded hover:bg-blue-500 font-semibold disabled:opacity-50\">Upload Board</button>\n                                <input type=\"file\" ref={fileInputRef} onChange={(e) => handleSetup('file', e.target.files?.[0])} className=\"hidden\" accept=\".txt\"/>\n                                <button onClick={() => handleSetup('random')} className=\"flex-1 px-4 py-2 bg-green-600 rounded hover:bg-green-500 font-semibold disabled:opacity-50\">Randomize</button>\n                            </div>\n                            <button onClick={handleReset} className=\"w-full px-4 py-2 bg-red-600 rounded hover:bg-red-500 font-semibold disabled:opacity-50\">Reset</button>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg flex-grow\">\n                        <h2 className=\"text-2xl font-bold border-b border-gray-700 pb-2 mb-4\">Analysis</h2>\n                        <div className=\"space-y-2 text-sm\">\n                            {isLoading ? <p className=\"animate-pulse\">AI is thinking...</p> : \n                             analysisInfo ? (\n                                <>\n                                    <p><span className=\"font-bold text-gray-300\">AI Move:</span> {analysisInfo.from} to {analysisInfo.to}</p>\n                                    {analysisInfo.mate_in && <p className=\"font-bold text-green-400 text-lg\">Mate in {analysisInfo.mate_in} moves!</p>}\n                                    {analysisInfo.analysis && Object.entries(analysisInfo.analysis).map(([key, value]) => (\n                                         <p key={key}><span className=\"font-bold text-gray-300\">{key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}:</span> {typeof value === 'number' ? value.toFixed(2) : String(value)}</p>\n                                    ))}\n                                </>\n                            ) : (\n                                <p className=\"text-gray-400\">No analysis yet.</p>\n                            )}\n                        </div>\n                         {error && <p className=\"mt-4 text-red-400 bg-red-900 p-3 rounded\">{error}</p>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}